//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeautySalon.Model
{
    using BeautySalon.Model;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.ClientService = new HashSet<ClientService>();
            this.TagOfClient = new HashSet<TagOfClient>();
        }

        public int ID { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Patronymic { get; set; }
        public Nullable<System.DateTime> Birthday { get; set; }
        public System.DateTime RegistrationDate { get; set; }
        public string Email { get; set; }
        public string Phone { get; set; }
        public string GenderCode { get; set; }
        public string PhotoPath { get; set; }

        public virtual Gender Gender { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TagOfClient> TagOfClient { get; set; }

        public string GenderOut
        {
            get
            {
                if (this.GenderCode == "1")
                {
                    return "Мужчина";
                }
                else
                {
                    return "Женщина";
                }
            }
        }

        public string ImgPath
        {
            get
            {
                if (this.PhotoPath != null)
                {
                    return "\\Resources\\" + this.PhotoPath;
                }
                else return "";

            }
        }
        public System.DateTime DataVisitint
        {
            get
            {

                return barhatnie_brovkiEntities.GetContext().ClientService
                    .Where(cs => cs.ClientID == this.ID)
                    .OrderByDescending(c => c.StartTime)
                    .Select(c => c.StartTime).FirstOrDefault();
            }
        }

        public string Visibl
        {
            get
            {
                if (this.ClientService.Count() == 0)
                {
                    return "Hidden";
                }
                else
                {
                    return "Visible";
                }

            }
        }

        public string CountVisitint
        {
            get
            {
                return this.ClientService.Count().ToString();
            }
        }
    }
}

